// Author: Vigith Maurice

package rangeexpr

type RangeExpr Peg {
 Expression
}

e <- combinedexpr? !.

combinedexpr <- rexpr cexpr?

rexpr <- sp 
   ( cluster
   / brackets
   / value
   / rlookup
   )

cexpr <- sp
   ( union
   / intersect
   / difference
   )
   sp

union <- ',' rexpr cexpr? { p.addOperator(typeUnion) }

intersect <- '&' rexpr cexpr? { p.addOperator(typeIntersect) }

difference <- '^' rexpr cexpr? { p.addOperator(typeDifference) }

cluster <- '%' rexpr? { p.addClusterOperator(typeClusterLookup) } key?

key <- ':' < [A-Z0-9]+ > { p.addClusterOperator(typeKeyLookup); p.addValue(buffer[begin:end]); }

rlookup <- '*' value { p.addClusterOperator(typeKeyReverseLookup) } attr? 

attr <- ';' < [A-Z0-9]+ > { p.addClusterOperator(typeKeyReverseLookupAttr); p.addValue(buffer[begin:end]); } hint?

hint <- { p.addClusterOperator(typeKeyReverseLookupHint) } ':' value 

# start with [:alpha] followed with [-a-z0-9] followed by [:alphanum]
value <- < ( first middle+ ) / ( first last? ) > { p.addValue(buffer[begin:end]) }
# split value into small blocks
first <- [a-z]+
middle <- '-' last
last <- [a-z0-9]*

brackets <- '(' combinedexpr ')'

sp <- ' '*
